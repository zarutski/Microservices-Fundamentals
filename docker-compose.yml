version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
  resource:
    image: resource
    container_name: resource-service
    build: resource/
    depends_on:
      - kafka
      - localstack
      - db-postgres
      - eureka
    environment:
      KAFKA_DOCKER_SERVICE: ${KAFKA_DOCKER_SERVICE}
      LOCALSTACK_SERVICE: ${LOCALSTACK_SERVICE}
      SERVICE_TO_KAFKA_CONNECTION: ${SERVICE_TO_KAFKA_CONNECTION}
      SERVICE_TO_KAFKA_PORT: ${SERVICE_TO_KAFKA_PORT}
      DB_SERVICE: ${DB_SERVICE}
      DB_PORT: ${DB_PORT}
      EUREKA_URL: ${EUREKA_URL}
  processor:
    image: processor
    container_name: processor-service
    build: processor/
    depends_on:
      - kafka
      - localstack
      - eureka
    environment:
      KAFKA_DOCKER_SERVICE: ${KAFKA_DOCKER_SERVICE}
      SERVICE_TO_KAFKA_CONNECTION: ${SERVICE_TO_KAFKA_CONNECTION}
      SERVICE_TO_KAFKA_PORT: ${SERVICE_TO_KAFKA_PORT}
      EUREKA_URL: ${EUREKA_URL}
  song:
    image: song
    container_name: song-service
    build: song/
    depends_on:
      - kafka
      - localstack
      - db-postgres
      - eureka
    environment:
      DB_SERVICE: ${DB_SERVICE}
      DB_PORT: ${DB_PORT}
      EUREKA_URL: ${EUREKA_URL}
  storage:
    image: storage
    container_name: storage-service
    build: storage/
    depends_on:
      - db-postgres
      - eureka
    environment:
      DB_SERVICE: ${DB_SERVICE}
      DB_PORT: ${DB_PORT}
      EUREKA_URL: ${EUREKA_URL}
  db-postgres:
    image: postgres
    container_name: db-postgres-container
    restart: always
    ports:
      - "5343:5432"
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - 4566:4566
    environment:
      SERVICES: ${LOCALSTACK_SERVICES}
      DOCKER_HOST: ${LOCALSTACK_DOCKER_HOST}
  eureka:
    image: msf/eureka
    container_name: eureka-service
    build: eureka/
    ports:
      - "8761:8761"
  gateway:
    container_name: gateway-service
    image: msf/gateway
    build: gateway/
    environment:
      EUREKA_URL: ${EUREKA_URL}
    ports:
      - '8080:8080'
    depends_on:
      - eureka